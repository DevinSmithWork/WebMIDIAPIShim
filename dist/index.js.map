{"version":3,"sources":["../src/index.js"],"names":["midiAccess","init","navigator","requestMIDIAccess","global","MIDIInput","MIDIOutput","MIDIMessageEvent","undefined","nodejs","close"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA,IAAIA,mBAAJ;;AAEA,IAAMC,OAAO,SAAPA,IAAO,GAAM;AACf,QAAI,CAACC,UAAUC,iBAAf,EAAkC;AAC9B;AACA;;AAEA;AACAC,eAAOC,SAAP;AACAD,eAAOE,UAAP;AACAF,eAAOG,gBAAP;;AAEAL,kBAAUC,iBAAV,GAA8B,YAAM;AAChC;AACA,gBAAIH,eAAeQ,SAAnB,EAA8B;AAC1BR,6BAAa,oCAAb;AACH;AACD,mBAAOA,UAAP;AACH,SAND;AAOA,YAAI,uBAAYS,MAAZ,KAAuB,IAA3B,EAAiC;AAC7BP,sBAAUQ,KAAV,GAAkB,YAAM;AACpB;AACA;AACA;AACH,aAJD;AAKH;AACJ;AACJ,CAzBD;;AA2BAT","file":"index.js","sourcesContent":["import { createMIDIAccess, closeAllMIDIInputs } from './midi/midi_access';\nimport { polyfill, getDevice } from './util/util';\nimport { MIDIInput } from './midi/midi_input'\nimport { MIDIOutput } from './midi/midi_output'\nimport { MIDIMessageEvent } from './midi/midimessage_event'\n\n\nlet midiAccess;\n\nconst init = () => {\n    if (!navigator.requestMIDIAccess) {\n        // Add some functionality to older browsers\n        polyfill();\n\n        // Add WebMIDI API globals\n        global.MIDIInput = MIDIInput\n        global.MIDIOutput = MIDIOutput\n        global.MIDIMessageEvent = MIDIMessageEvent\n\n        navigator.requestMIDIAccess = () => {\n            // Singleton-ish, no need to create multiple instances of MIDIAccess\n            if (midiAccess === undefined) {\n                midiAccess = createMIDIAccess();\n            }\n            return midiAccess;\n        };\n        if (getDevice().nodejs === true) {\n            navigator.close = () => {\n                // For Nodejs applications we need to add a method that closes all MIDI input ports,\n                // otherwise Nodejs will wait for MIDI input forever.\n                closeAllMIDIInputs();\n            };\n        }\n    }\n};\n\ninit();\n"]}