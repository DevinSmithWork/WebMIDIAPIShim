{"version":3,"sources":["../src/index.js"],"names":["midiAccess","init","navigator","requestMIDIAccess","undefined","nodejs","close"],"mappings":";;;;;;AAEA;;AACA;;AAHA;;AAKA,IAAIA,mBAAJ;;AAEA,IAAMC,OAAO,SAAPA,IAAO,GAAM;AACf,QAAI,CAACC,UAAUC,iBAAf,EAAkC;AAC9B;AACAD,kBAAUC,iBAAV,GAA8B,YAAM;AAChC;AACA,gBAAIH,eAAeI,SAAnB,EAA8B;AAC1BJ,6BAAa,oCAAb;AACH;AACD,mBAAOA,UAAP;AACH,SAND;AAOA,YAAI,uBAAYK,MAAZ,KAAuB,IAA3B,EAAiC;AAC7BH,sBAAUI,KAAV,GAAkB,YAAM;AACpB;AACA;AACH,aAHD;AAIH;AACJ;AACJ,CAjBD;;AAmBAL;AACA;kBACeA,I","file":"index.js","sourcesContent":["/* eslint wrap-iife: [\"error\", \"any\"] */\n\nimport { createMIDIAccess, closeAllMIDIInputs } from './midi/midi_access';\nimport { polyfill, getDevice } from './util/util';\n\nlet midiAccess;\n\nconst init = () => {\n    if (!navigator.requestMIDIAccess) {\n        polyfill();\n        navigator.requestMIDIAccess = () => {\n            // singleton-ish, no need to create multiple instances of MIDIAccess\n            if (midiAccess === undefined) {\n                midiAccess = createMIDIAccess();\n            }\n            return midiAccess;\n        };\n        if (getDevice().nodejs === true) {\n            navigator.close = () => {\n                // Need to close MIDI input ports, otherwise Node.js will wait for MIDI input forever.\n                closeAllMIDIInputs();\n            };\n        }\n    }\n};\n\ninit();\n// export for use with node\nexport default init;\n"]}